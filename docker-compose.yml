version: "3.8"

services:

  kafka:
    image: apache/kafka-native:4.0.0
    container_name: kafka-project
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
      - app-network

  mongodb:
    image: mongo:6
    container_name: mongodb-project
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-project
    ports:
      - "6379:6379"
    networks:
      - app-network

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: api-server
    depends_on:
      - kafka
      - mongodb
      - redis
      - worker-server
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=mongodb://mongodb:27017/test
      - KAFKA_BROKER=kafka:9092 
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_SSL=false
    networks:
      - app-network

  worker-server:
    build:
      context: ./worker-server
      dockerfile: Dockerfile
    container_name: worker-server
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BROKER=kafka:9092
    networks:
      - app-network

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge